source=~/.config/hypr/var.conf
source=$HERE/themes/$IMPORTED/$IMPORTED_var.conf
$mainMod = SUPER # Sets "Windows" key as main modifier

#############
### INPUT ###
#############

# For all categories, see https://wiki.hyprland.org/Configuring/Variables/

# https://wiki.hyprland.org/Configuring/Variables/#input
input {
    kb_model = pc105
    kb_layout = fr, us
    kb_variant = azerty
    kb_options = grp:alt_shift_toggle
}


###################
### KEYBINDINGS ###
###################

# Example binds, see https://wiki.hyprland.org/Configuring/Binds/ for more
bindd = $mainMod, Return, Open terminal, exec, $terminal
bindd = Alt_L, F4, Close current focused window, killactive,
bindd = $mainMod SHIFT, E, Exit current session, exit,
bindd = $mainMod, E, Open file manager, exec, $fileManager
bindd = $mainMod, V, Float/tile current window, togglefloating,
binddr = SUPER, SUPER_L, Open application launcher, exec, $menu
bindd = $mainMod, J, Swap the windows layout, togglesplit, # dwindle
bindd = $mainMod SHIFT, N, Show notification panel (to change?), exec, $notifsManager-client --toggle-panel

# Move focus with mainMod + arrow keys
bindd = $mainMod, h, Focus left window, movefocus, l
bindd = $mainMod, j, Focus top window,  movefocus, u
bindd = $mainMod, k, Focus bottom window, movefocus, d
bindd = $mainMod, l, Focus right window, movefocus, r



### WORKSPACES
# Switch workspaces with mainMod + [0-9]
bindd = $mainMod, code:10, Go to 1st workspace, workspace, 1
bindd = $mainMod, code:11, Go to 2nd workspace, workspace, 2
bindd = $mainMod, code:12, Go to 3rd workspace, workspace, 3
bindd = $mainMod, code:13, Go to 4th workspace, workspace, 4
bindd = $mainMod, code:14, Go to 5th workspace, workspace, 5
bindd = $mainMod, code:15, Go to 6th workspace, workspace, 6
bindd = $mainMod, code:16, Go to 7th workspace, workspace, 7
bindd = $mainMod, code:17, Go to 8th workspace, workspace, 8
bindd = $mainMod, code:18, Go to 9th workspace, workspace, 9
bindd = $mainMod, code:19, Go to 10th workspace, workspace, 10
# Move active window to a workspace with mainMod + SHIFT + [0-9]
bindd = $mainMod SHIFT, code:10, Send to 1st workspace, movetoworkspacesilent, 1
bindd = $mainMod SHIFT, code:11, Send to 2nd workspace, movetoworkspacesilent, 2
bindd = $mainMod SHIFT, code:12, Send to 3rd workspace, movetoworkspacesilent, 3
bindd = $mainMod SHIFT, code:13, Send to 4th workspace, movetoworkspacesilent, 4
bindd = $mainMod SHIFT, code:14, Send to 5th workspace, movetoworkspacesilent, 5
bindd = $mainMod SHIFT, code:15, Send to 6th workspace, movetoworkspacesilent, 6
bindd = $mainMod SHIFT, code:16, Send to 7th workspace, movetoworkspacesilent, 7
bindd = $mainMod SHIFT, code:17, Send to 8th workspace, movetoworkspacesilent, 8
bindd = $mainMod SHIFT, code:18, Send to 9th workspace, movetoworkspacesilent, 9
bindd = $mainMod SHIFT, code:19, Send to 10th workspace, movetoworkspacesilent, 10
# Close special workspace on moving to another workspace
bindd = $mainMod, code:10, Close special workspace when going to regular workspace, exec, hyprctl monitors -j | jq -r '.[] | select(.focused == true) | .specialWorkspace.name' | sed 's/special://' | xargs -I [] hyprctl dispatch togglespecialworkspace []
bindd = $mainMod, code:11, Close special workspace when going to regular workspace, exec, hyprctl monitors -j | jq -r '.[] | select(.focused == true) | .specialWorkspace.name' | sed 's/special://' | xargs -I [] hyprctl dispatch togglespecialworkspace []
bindd = $mainMod, code:12, Close special workspace when going to regular workspace, exec, hyprctl monitors -j | jq -r '.[] | select(.focused == true) | .specialWorkspace.name' | sed 's/special://' | xargs -I [] hyprctl dispatch togglespecialworkspace []
bindd = $mainMod, code:13, Close special workspace when going to regular workspace, exec, hyprctl monitors -j | jq -r '.[] | select(.focused == true) | .specialWorkspace.name' | sed 's/special://' | xargs -I [] hyprctl dispatch togglespecialworkspace []
bindd = $mainMod, code:14, Close special workspace when going to regular workspace, exec, hyprctl monitors -j | jq -r '.[] | select(.focused == true) | .specialWorkspace.name' | sed 's/special://' | xargs -I [] hyprctl dispatch togglespecialworkspace []
bindd = $mainMod, code:15, Close special workspace when going to regular workspace, exec, hyprctl monitors -j | jq -r '.[] | select(.focused == true) | .specialWorkspace.name' | sed 's/special://' | xargs -I [] hyprctl dispatch togglespecialworkspace []
bindd = $mainMod, code:16, Close special workspace when going to regular workspace, exec, hyprctl monitors -j | jq -r '.[] | select(.focused == true) | .specialWorkspace.name' | sed 's/special://' | xargs -I [] hyprctl dispatch togglespecialworkspace []
bindd = $mainMod, code:17, Close special workspace when going to regular workspace, exec, hyprctl monitors -j | jq -r '.[] | select(.focused == true) | .specialWorkspace.name' | sed 's/special://' | xargs -I [] hyprctl dispatch togglespecialworkspace []
bindd = $mainMod, code:18, Close special workspace when going to regular workspace, exec, hyprctl monitors -j | jq -r '.[] | select(.focused == true) | .specialWorkspace.name' | sed 's/special://' | xargs -I [] hyprctl dispatch togglespecialworkspace []
bindd = $mainMod, code:19, Close special workspace when going to regular workspace, exec, hyprctl monitors -j | jq -r '.[] | select(.focused == true) | .specialWorkspace.name' | sed 's/special://' | xargs -I [] hyprctl dispatch togglespecialworkspace []



# Scroll through existing workspaces with mainMod + scroll
bindd = $mainMod, mouse_down, Scroll up through workspaces, workspace, e+1
bindd = $mainMod, mouse_up, Scroll down through workspaces, workspace, e-1



### SPECIAL WORKSPACES ###
# Dropdown workspace
bindd = $mainMod, W, Dropdown terminal, togglespecialworkspace, cmd
bindd = $mainMod SHIFT, W, Send to terminal workspace, movetoworkspacesilent, special:cmd


# Move/resize windows with mainMod + LMB/RMB and dragging
binddm = $mainMod, mouse:272, Move selected window, movewindow
binddm = $mainMod, mouse:273, Resize selected window, resizewindow

# Laptop multimedia keys for volume and LCD brightness
binddel = ,F3, Raise volume, exec, wpctl set-volume -l 1 @DEFAULT_AUDIO_SINK@ 5%+ 
binddel = ,F2, Lower volume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%- 
binddel = ,F1, Mute audio, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
binddel = ,F12, Raise monitor brightness, exec, brightnessctl -c backlight set 5%+
binddel = ,F11, Lower monitor brightness, exec, brightnessctl -c backlight set 5%-
binddel = SHIFT, F12, Raise keyboard brightness, exec, brightnessctl -d "*kbd*" set 50%+
binddel = SHIFT, F11, Raise keyboard brightness, exec, brightnessctl -d "*kbd*" set 50%-

# Control media player
binddl = , F7, Skip media, exec, playerctl next --ignore-player=$browser
binddl = , F6, Pause/play media, exec, playerctl play-pause --ignore-player=$browser
binddl = , F5, Rewind media, exec, playerctl previous --ignore-player=$browser

# Screenshots
bindd = $mainMod SHIFT, S, Screenshot selected zone, exec, $screenshot
bindd = , Print, Screenshot whole screen, exec, hyprshot --mode active --mode output --clipboard-only --freeze
bindd = Alt_L, Print, Screenshot current window, exec, hyprshot --mode active --mode window --clipboard-only --freeze

# Record with obs
bindd = $mainMod, O, Go to OBS' workspace, workspace, name:OBS
bindd = $mainMod SHIFT, O, Send to OBS' workspace, movetoworkspacesilent, name:OBS
bindd = ALT, R, Save last 30 seconds with OBS, pass, class:com.obsproject.Studio

# Replicate Windows+Tab behaviour
#bindd = SUPER, TAB, View all workspaces, overview:toggle
plugin {
    overview {
        # Colors
        panelColor = true #
        panelBorderColor = true #
        workspaceActiveBackground = true #
        workspaceInactiveBackground = true #
        workspaceActiveBorder = true #
        workspaceInactiveBorder = true #
        dragAlpha = 0.5 # overrides the alpha of window when dragged in overview (0 - 1, 0 = transparent, 1 = opaque)
        disableBlur = true #

        #Layout
        panelHeight = 200 #
        panelBorderWidth = 5 #
        onBottom = false # whether if panel should be on bottom instead of top
        workspaceMargin = 1 # spacing of workspaces with eachother and the edge of the panel
        reservedArea = 0 # padding on top of the panel, for Macbook camera notch
        workspaceBorderSize = 5 #
        centerAligned = false # whether if workspaces should be aligned at the center (KDE / macOS style) or at the left (Windows style)
        hideBackgroundLayers = true # do not draw background and bottom layers in overview
        hideTopLayers = true # do not draw top layers in overview
        hideOverlayLayers = true # do not draw overlay layers in overview
        hideRealLayers = true # whether to hide layers in actual workspace
        overrideGaps = true # whether if overview should override the layout gaps in the current workspace using the following values
        gapsIn = 5 #
        gapsOut = 5 #
        affectStrut = true # whether the panel should push window aside, disabling this option also disables overrideGaps

        # Behaviors
        autoDrag = true # mouse click always drags window when overview is open
        exitOnClick = true # mouse click without dragging exits overview
        exitOnSwitch = true # overview exits when overview is switched by clicking on workspace view or by switchOnDrop
        showNewWorkspace = true # add a new empty workspace at the end of workspaces view
        showEmptyWorkspace = false # show empty workspaces that are inbetween non-empty workspaces
        showSpecialWorkspace = true # defaults to false
        exitKey = Escape # key used to exit overview mode (default: Escape). Leave empty to disable keyboard exit.
    }
}
